{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentUser: null,\n  isLoading: false,\n  error: false\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.isLoading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.currentUser = action.payload;\n    },\n    loginFailed: state => {\n      state.isLoading = false;\n      state.error = true;\n    },\n    logout: state => {\n      return initialState;\n    },\n    changeProfile: (state, action) => {\n      state.currentUser.profilePicture = action.payload;\n    },\n    following: (state, action) => {\n      if (state.currentUser.following.includes(action.payload)) {\n        state.currentUser.following.splice(state.currentUser.following.findIndex(followingId => followingId === action.payload));\n      } else {\n        state.currentUser.following.push(action.payload);\n      }\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailed,\n  logout,\n  changeProfile,\n  following\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentUser","isLoading","error","userSlice","name","reducers","loginStart","state","loginSuccess","action","payload","loginFailed","logout","changeProfile","profilePicture","following","includes","splice","findIndex","followingId","push","actions","reducer"],"sources":["C:/Users/91900/Twitter-clone/Twitter-clone-project/client/src/redux/userSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  currentUser: null,\r\n  isLoading: false,\r\n  error: false,\r\n};\r\n\r\nexport const userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.currentUser = action.payload;\r\n    },\r\n    loginFailed: (state) => {\r\n      state.isLoading = false;\r\n      state.error = true;\r\n    },\r\n    logout: (state) => {\r\n      return initialState;\r\n    },\r\n    changeProfile: (state, action) => {\r\n      state.currentUser.profilePicture = action.payload;\r\n    },\r\n    following: (state, action) => {\r\n      if (state.currentUser.following.includes(action.payload)) {\r\n        state.currentUser.following.splice(\r\n          state.currentUser.following.findIndex(\r\n            (followingId) => followingId === action.payload\r\n          )\r\n        );\r\n      } else {\r\n        state.currentUser.following.push(action.payload);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailed,\r\n  logout,\r\n  changeProfile,\r\n  following,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,SAAS,EAAE,KAAK;EAChBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,SAAS,GAAG,IAAI;IACxB,CAAC;IACDO,YAAY,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACP,WAAW,GAAGS,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,WAAW,EAAGJ,KAAK,IAAK;MACtBA,KAAK,CAACN,SAAS,GAAG,KAAK;MACvBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDU,MAAM,EAAGL,KAAK,IAAK;MACjB,OAAOR,YAAY;IACrB,CAAC;IACDc,aAAa,EAAE,CAACN,KAAK,EAAEE,MAAM,KAAK;MAChCF,KAAK,CAACP,WAAW,CAACc,cAAc,GAAGL,MAAM,CAACC,OAAO;IACnD,CAAC;IACDK,SAAS,EAAE,CAACR,KAAK,EAAEE,MAAM,KAAK;MAC5B,IAAIF,KAAK,CAACP,WAAW,CAACe,SAAS,CAACC,QAAQ,CAACP,MAAM,CAACC,OAAO,CAAC,EAAE;QACxDH,KAAK,CAACP,WAAW,CAACe,SAAS,CAACE,MAAM,CAChCV,KAAK,CAACP,WAAW,CAACe,SAAS,CAACG,SAAS,CAClCC,WAAW,IAAKA,WAAW,KAAKV,MAAM,CAACC,OAAO,CAChD,CACF;MACH,CAAC,MAAM;QACLH,KAAK,CAACP,WAAW,CAACe,SAAS,CAACK,IAAI,CAACX,MAAM,CAACC,OAAO,CAAC;MAClD;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXJ,UAAU;EACVE,YAAY;EACZG,WAAW;EACXC,MAAM;EACNC,aAAa;EACbE;AACF,CAAC,GAAGZ,SAAS,CAACkB,OAAO;AAErB,eAAelB,SAAS,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}